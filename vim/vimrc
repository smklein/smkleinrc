set nocompatible              " be iMproved, required
filetype off                  " required

" Used by vim-gitgutter
set shell=/bin/bash
let g:gitgutter_sign_column_always = 1
let g:gitgutter_diff_args = ''
let g:gitgutter_sign_added = '++'
let g:gitgutter_sign_modified = '~~'
let g:gitgutter_sign_removed = '--'

function ChangeGitgutterDiff()
  if g:gitgutter_diff_args == ''
    let g:gitgutter_diff_args = 'origin/master'
  else
    let g:gitgutter_diff_args = ''
  endif
endfunction

" Control-s to switch the diff we are viewing
nnoremap <C-s> :call ChangeGitgutterDiff() \| :w<CR>

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
" alternatively, pass a path where Vundle should install plugins
" call vundle#begin('~/some/path/here')
" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'
" Keep Plugin commands between vundle#begin/end.
Plugin 'haya14busa/incsearch.vim' " Incremental search
Plugin 'airblade/vim-gitgutter' " Git diffs inline
Plugin 'altercation/vim-colors-solarized' " Solarized
" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required

" Incsearch, highlight while searching.
map /  <Plug>(incsearch-forward)
map ?  <Plug>(incsearch-backward)
map g/ <Plug>(incsearch-stay)

" Ensure that we are in modern vim mode, not backwards-compatible vi mode
set nocompatible
set backspace=indent,eol,start

" Google specific
source /usr/share/vim/google/google.vim

" Helpful information: cursor position in bottom right, line numbers on left
set ruler
set number

" Enable filetype detection and syntax hilighting
syntax on
filetype on
filetype indent on
filetype plugin on

" Show multicharacter commands as they are being typed
set showcmd

" Trims end of line whitespace
fun! TrimWhitespace()
    let l:save_cursor = getpos('.')
    %s/\s\+$//e
    call setpos('.', l:save_cursor)
endfun

" In visual mode, Ctrl+c/p to copy paste
vmap <C-c> "+y<CR>
vmap <C-p> "+p<CR>

set pastetoggle=<F5>
set runtimepath+=$GOROOT/misc/vim
" Always show filename...
set statusline=%f           "file name
set statusline+=%=          "separator

set statusline+=[Diff\ 
set statusline+=%{g:gitgutter_diff_args}
set statusline+=],

set statusline+=%c          "column number
set statusline+=,\[%l/%L\]  "row number / total rows
set statusline+=\ %P        "percentage of way through file
set laststatus=2

" Highlight TODOs and other important keywords
augroup HighlightTODO
    autocmd!
    autocmd WinEnter,VimEnter * :silent! call matchadd('Todo',
          \    'TODO\|FIXME\|NOTE\|BUG\|XXX', -1)
augroup END

augroup HighlightTODO
    autocmd!
    autocmd WinEnter,VimEnter *.txt :silent! call matchadd('Todo',
          \    '\$.*', -1)
augroup END


" Settings for Solarized
syntax enable
set background=dark
set term=xterm-256color
let g:solarized_termcolors = 256
let g:solarized_visibility = "high"
let g:solarized_contrast = "high"
let g:solarized_underline = 1
colorscheme solarized

set cursorline
"hi clear CursorLine
"hi CursorLine gui=underline
hi String ctermfg=209
hi Comment gui=bold term=bold ctermfg=185
hi Identifier ctermfg=33
hi Function ctermfg=87 gui=bold

" colorscheme zellner
" Admittedly, I couldn't disable autofolding... I just used a high level...
set foldlevelstart=2
set foldmethod=indent
" More folding (by one level)
nnoremap zj zm
" More folding (by all levels)
nnoremap zh zM
" Less folding (by one level)
nnoremap zk zr
" Less folding (by all levels)
nnoremap zl zR
set nofoldenable

" Use control p to open current file in Chrome
nnoremap <c-p> :exe '!google-chrome %'<CR>

" move vertically by visual line
nnoremap j gj
nnoremap k gk

"noremap <Up> <NOP>
"noremap <Down> <NOP>
"noremap <Left> <NOP>
"noremap <Right> <NOP>

inoremap <C-s> ✔
inoremap <C-x> ✘

set listchars=tab:>-,trail:-
set list
set tabstop=2
set shiftwidth=2
set expandtab
set cindent
set incsearch
set hlsearch
set ignorecase
set relativenumber

command Nonum set norelativenumber | set nonumber
command Yesnum set relativenumber | set number

" Highlight trailing whitspace
highlight ExtraWhitespace ctermbg=red guibg=red
match ExtraWhitespace /\s\+$/
autocmd BufWinEnter * match ExtraWhitespace /\s\+$/
autocmd InsertEnter * match ExtraWhitespace /\s\+\%#\@<!$/
autocmd InsertLeave * match ExtraWhitespace /\s\+$/
autocmd BufWinLeave * call clearmatches()

" Highlight anything more than 80 characters
" match Error '\%>80v.\+'
highlight ColorColumn ctermbg=DarkMagenta
autocmd BufNewFile,BufRead *.java
      \ call matchadd('ColorColumn', '\%101v.\+', 100)
autocmd BufNewFile,BufRead *.cc,*.c,*.py,*.h
      \ call matchadd('ColorColumn', '\%81v.\+', 100)


